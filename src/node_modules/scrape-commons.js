// all scraping stuff
const logger = require('logger.js')("Scraping module");
const rp = require('request-promise').defaults({jar: true});
const cheerio = require('cheerio');
const dt = require('data-tables');
const config = require('../config.json');
const tf = require('task-factory');
const LINK = 'https://www.novaragnarok.com';

async function login() {

  console.log(tf.AutoMarketTask.session);
  const options = {
    method: 'POST',
    uri: LINK,
    qs: {
      module: 'account',
      action: 'login',
    },
    form: {
      username: config.novaUsername,
      password: config.novaPassword,
      server: 'NovaRO',
    },
    headers: {
      Cookie: `fluxSessionData=${tf.AutoMarketTask.session}`,
    },
    followAllRedirects: true,
    transform: (body) => {
      return cheerio.load(body);
    },
  }
  return rp(options)
    .then($ => {
      try {
        const loginBtn = $('input[type="submit"]').get(1).attribs.value;
        console.log(loginBtn);
        if (loginBtn === 'Log In') {
          return 0;
        }
      } catch {
        tf.AutoMarketTask.loggedIn = true;
        tf.AutoMarketTask.messageSent = false;
        return 1;
      }
    })
    .catch(err => {
      console.log(`An error occurred with Nova login: ${err}`);
      return 0;
    });
}

async function getPage(url, qs = {}) {

  const options = {
    method: 'GET',
    uri:    url,
    qs: qs,
    resolveWithFullResponse: true,
    headers: {
      Cookie: `fluxSessionData=${tf.AutoMarketTask.session}`,
    },
    transform: (body) => {
      return cheerio.load(body);
    },
  };

  return rp(options)
    .then($ => {
      return $;
    })
    .catch(err => {
      logger.error(`An error has occurred on request. ${err}`);
    });
}

exports.getPage = getPage;
exports.login = login;
